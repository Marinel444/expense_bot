import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import BotCommand
from config import BOT_TOKEN
from database.db import init_db, async_session
from database.models import Category, Currency
from bot.handlers import expense, commands
from sqlalchemy import select


async def seed_data():
    async with async_session() as session:
        result = await session.execute(select(Category))
        if result.scalars().first():
            return  # –¥–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å

        session.add_all([
            Category(name="–ü—Ä–æ–¥—É–∫—Ç—ã"),
            Category(name="–û–¥–µ–∂–¥–∞"),
            Category(name="–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ"),
            Category(name="–†–µ—Å—Ç–æ—Ä–∞–Ω—ã"),
            Category(name="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"),
            Category(name="–ó–¥–æ—Ä–æ–≤—å–µ"),
            Category(name="–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"),
            Category(name="–î—Ä—É–≥–æ–µ"),
        ])
        session.add_all([
            Currency(code="UAH", symbol="‚Ç¥"),
            Currency(code="RON", symbol="lei"),
            Currency(code="USD", symbol="$"),
            Currency(code="EUR", symbol="‚Ç¨"),
        ])
        await session.commit()


async def main():
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()

    await bot.set_my_commands([
        BotCommand(command="start", description="üü¢ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"),
        BotCommand(command="expense", description="üí∏ –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É"),
        BotCommand(command="stats", description="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
        BotCommand(command="settings", description="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
    ])

    dp.include_routers(commands.router, expense.router)

    await init_db()
    await seed_data()
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
